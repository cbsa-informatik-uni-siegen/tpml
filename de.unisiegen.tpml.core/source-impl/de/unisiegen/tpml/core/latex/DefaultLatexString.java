package de.unisiegen.tpml.core.latex ;


/**
 * Default implementation of the
 * {@link de.unisiegen.tpml.core.prettyprinter.PrettyString} interface.
 * Generated by the
 * {@link de.unisiegen.tpml.core.latex.DefaultLatexStringBuilder}s.
 * 
 * @author Benedikt Meurer
 * @version $Rev:277 $
 * @see de.unisiegen.tpml.core.latex.LatexString
 * @see de.unisiegen.tpml.core.latex.LatexStringBuilder
 * @see de.unisiegen.tpml.core.latex.DefaultLatexStringBuilder
 */
final class DefaultLatexString implements LatexString
{
  //
  // Attributes
  //
  /**
   * The raw character content of the pretty string.
   * 
   * @see #toString()
   */
  private String content ;


  //
  // Constructor (package)
  //
  /**
   * Allocates a new <code>DefaultPrettyString</code> for the specified
   * <code>content</code>. The <code>annotations</code> and
   * <code>styles</code> give additional information about the data contained
   * in of <code>content</code>.
   * 
   * @param pContent the string representation of an expression.
   * @see DefaultLatexStringBuilder#toLatexString()
   */
  DefaultLatexString ( String pContent )
  {
    this.content = pContent ;
  }


  //
  // Base methods
  //
  /**
   * Returns <code>true</code> if the <code>obj</code> is a
   * <code>DefaultPrettyString</code> with the same attribute values as this
   * pretty string instance.
   * 
   * @param obj another object.
   * @return <code>true</code> if <code>obj</code> is equal to this pretty
   *         string.
   * @see java.lang.Object#equals(java.lang.Object)
   */
  @ Override
  public boolean equals ( Object obj )
  {
    if ( obj instanceof DefaultLatexString )
    {
      DefaultLatexString other = ( DefaultLatexString ) obj ;
      return this.content.equals ( other.content ) ;
    }
    return false ;
  }


  /**
   * Returns a hash value for this pretty string.
   * 
   * @return a hash value for this pretty string.
   * @see java.lang.Object#hashCode()
   */
  @ Override
  public int hashCode ( )
  {
    return this.content.hashCode ( ) ;
  }


  /**
   * Returns the string representation of the pretty string without any
   * annotations. This is mainly useful for debugging purposes.
   * 
   * @return the string representation of the pretty string.
   * @see java.lang.Object#toString()
   */
  @ Override
  public String toString ( )
  {
    return this.content ;
  }
}
