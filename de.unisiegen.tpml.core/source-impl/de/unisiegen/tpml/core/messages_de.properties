# General strings
AbstractLanguage.0=Die Sprache {0} enth\u00e4lt kein Typsystem
ProofGuessException.0=Die n\u00e4chste Regel f\u00fcr den Knoten [{0}] konnte nicht bestimmt werden 
SmallStepProofModel.0=Ein bereits bewiesener Knoten kann nicht erneut bewiesen werden
SmallStepProofModel.1=Die Auswertung ist steckengeblieben
BigStepProofModel.0=Die Auswertung ist steckengeblieben

# Parser strings
Parser.0=Unerwartetes Dateiende
Parser.1=Syntaxfehler bei Zeichen "{0}"

# Typechecker strings
UnificationException.0={0} kann nicht unifiziert werden

# L0 strings
L0BigStepProofRuleSet.0=(BETA-V) kann nur angewandt werden, wenn der Operand bereits ein Wert ist
L0BigStepProofRuleSet.1=(VAL) kann nur auf Werte angewandt werden
L0Language.0=Die einfachste denkbare Programmiersprache bestehend aus \u03BB-Abstraktionen, Bezeichnern und Applikationen.
L0Language.1=Reiner ungetypter \u03BB Kalk\u00fcl

# L1 strings
L1BigStepProofRuleSet.0=(OP) kann hier nicht angewandt werden, verwenden Sie stattdessen (CONS) 
L1Language.0=Der einfache getypte \u03BB Kalk\u00fcl erweitert den einfachen ungetypten \u03BB Kalk\u00fcl um ein einfaches Typsystem, den Bindungsmechanismus let, bedingte Ausf\u00fchrung und Konstanten. Die Sprache erlaubt dar\u00fcber hinaus Operatoren in Infix-Schreibweise zu benutzen.
L1Language.1=Einfach getypter \u03BB Kalk\u00fcl

# L2 strings
L2Language.0=Die Sprache L2 kombiniert den einfach getypten \u03BB Kalk\u00fcl mit rekursiven Ausdr\u00fccken. 
L2Language.1=Angewandter \u03BB Kalk\u00fcl mit Rekursion

# L3 strings
L3BigStepProofRuleSet.0=(HD) kann nur angewandt werden, wenn der Operand bereits ein Wert ist
L3BigStepProofRuleSet.1=(HD) kann nur auf Listen oder Applikationen von cons auf Paare angewandt werden
L3BigStepProofRuleSet.2=(IS-EMPTY-FALSE) kann nur angewandt werden, wenn der Operand bereits ein Wert ist
L3BigStepProofRuleSet.3=(IS-EMPTY-FALSE) und (IS-EMPTY-TRUE) k\u00f6nn nur auf Listen oder Applikationen von cons auf Paare angewandt werden
L3BigStepProofRuleSet.4=(IS-EMPTY-TRUE) kann nur angewandt werden, wenn der Operand bereits ein Wert ist
L3BigStepProofRuleSet.5=(TL) kann nur angewandt werden, wenn der Operand bereits ein Wert ist
L3BigStepProofRuleSet.6=(TL) kann nur auf Listen oder Applikationen von cons auf Paare angewandt werden
L3Language.0=Die Sprache L3 beinhaltet Listen und Tupel und verf\u00fcgt dar\u00fcber hinaus \u00fcber ein polymorphes Typsystem.
L3Language.1=Angewandter \u03BB Kalk\u00fcl mit polymorphen Typsystem

# L4 strings
L4Language.0=Die Sprache L4 erweitert L3 um imperative Konzepte, einschliesslich syntaktischem Zucker f\u00fcr sequentielle Ausf\u00fchrung und Schleifen.
L4Language.1=Angewandter \u03BB Kalk\u00fcl mit imperativen Konzepten
