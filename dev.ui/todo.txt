		- Neu Dialog: Man könnte doch eine Art Wizard einbauen, ähnlich wie beim
		  gtitool, der als erstes nach der Vorlesung fragt, also z.B. "TP1 2007/08"
		  oder "TP2 2008" und dann nach dem Thema zu dem man üben möchte also z.B.
		  "Subtyping" oder "Rekursive Typen"..., zusätzlich zum normalen "Neu-Dialog".
		  Vielleicht einfach über ne XML Datei gesteuert
		- Save Button komplett neu schreiben
		- AboutDialog mit Netbeans neu schreiben (Entwickler in TPML
		  1.0, 2.0 und 3.0 unterteilen)
		- PreferenceDialog mit Netbeans neu schreiben
		- Dynamische Sprachänderung (siehe GTITool unter
		  http://vcs.informatik.uni-siegen.de/projects/gtitool/)
		- Dynamische Änderung des Look and Feel
		- Die Info-Dialoge mit Netbeans neu schreiben, da die Message
		  im Moment nicht umgebrochen wird.
		- Internationalisierung überprüfen (viele Meldungen sind nur
		  englisch, betrifft alle Projekte)
		- PDF Print Dialog überarbeiten (Internationalisierung ...)
		- Im Neu-Dialog nur die Sprachen expandieren, die der Benutzer beim
		  letzten Mal offen hatte (Siehe GTITool: Farbeinstellungen)
		- Im Neu-Dialog einen Filter einrichten, für den Stoff der verschiedenen
		  Vorlesungen (TP I, TP II, Sonstiges)
		- Die Breite des OpenDialogs beschränken (Einen eigenen mit Netbeans
		  implementieren)
		- Die Beschreibung im Neu Dialog kleiner machen
		- TypeChecker: Typ nachträglich eingeben können bei Lambda & Rec
CU		- Unify
		- Umgebungssemantik
		- Tooltip im Typinferenz Beweiswerkzeug überarbeiten (Zeilenumbruch)
		- Liste der Substitutionen muss mit Syntax-Highlighting versehen werden
		  (PrettyPrinter ist schon implementiert)
		- L1 und L2 besitzen jetzt keine RecTypes mehr, die Menge A soll
		  nicht mehr dargestellt werden
		- Beim Type Checker kann ein Typ eingegeben werden. Anstelle eines
		  normalen Eingabefeldes muss hier ein Parser verwendet werden, damit
		  das Syntax Highlighting funktioniert
		- Drucken ohne vorheriges Exportieren in eine pdf Datei
		- Beim erzeugen der TPML.tex Datei: Bei den Dialogen ob der Export funktioniert hat
		  wird zwar ein parent mitgegeben, dieser ist aber null. Dadurch wird das Fenster in der
		  Bildschirmmitte angezeigt und nicht in der Mitte des MainWindows.
