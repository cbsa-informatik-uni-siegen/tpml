/* This file was generated by SableCC (http://www.sablecc.org/). */

package l1.node;

import java.util.*;
import l1.analysis.*;

public final class ADivideExpression extends PExpression
{
    private TDivide _divide_;

    public ADivideExpression()
    {
    }

    public ADivideExpression(
        TDivide _divide_)
    {
        setDivide(_divide_);

    }
    public Object clone()
    {
        return new ADivideExpression(
            (TDivide) cloneNode(_divide_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseADivideExpression(this);
    }

    public TDivide getDivide()
    {
        return _divide_;
    }

    public void setDivide(TDivide node)
    {
        if(_divide_ != null)
        {
            _divide_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _divide_ = node;
    }

    public String toString()
    {
        return ""
            + toString(_divide_);
    }

    void removeChild(Node child)
    {
        if(_divide_ == child)
        {
            _divide_ = null;
            return;
        }

    }

    void replaceChild(Node oldChild, Node newChild)
    {
        if(_divide_ == oldChild)
        {
            setDivide((TDivide) newChild);
            return;
        }

    }
}
