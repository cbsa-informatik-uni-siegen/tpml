/* This file was generated by SableCC (http://www.sablecc.org/). */

package l1.node;

import java.util.*;
import l1.analysis.*;

public final class AMultiplyExpression extends PExpression
{
    private TMultiply _multiply_;

    public AMultiplyExpression()
    {
    }

    public AMultiplyExpression(
        TMultiply _multiply_)
    {
        setMultiply(_multiply_);

    }
    public Object clone()
    {
        return new AMultiplyExpression(
            (TMultiply) cloneNode(_multiply_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAMultiplyExpression(this);
    }

    public TMultiply getMultiply()
    {
        return _multiply_;
    }

    public void setMultiply(TMultiply node)
    {
        if(_multiply_ != null)
        {
            _multiply_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _multiply_ = node;
    }

    public String toString()
    {
        return ""
            + toString(_multiply_);
    }

    void removeChild(Node child)
    {
        if(_multiply_ == child)
        {
            _multiply_ = null;
            return;
        }

    }

    void replaceChild(Node oldChild, Node newChild)
    {
        if(_multiply_ == oldChild)
        {
            setMultiply((TMultiply) newChild);
            return;
        }

    }
}
