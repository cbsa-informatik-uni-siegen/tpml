/* This file was generated by SableCC (http://www.sablecc.org/). */

package l1.node;

import java.util.*;
import l1.analysis.*;

public final class AUnitExpression extends PExpression
{
    private TUnit _unit_;

    public AUnitExpression()
    {
    }

    public AUnitExpression(
        TUnit _unit_)
    {
        setUnit(_unit_);

    }
    public Object clone()
    {
        return new AUnitExpression(
            (TUnit) cloneNode(_unit_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAUnitExpression(this);
    }

    public TUnit getUnit()
    {
        return _unit_;
    }

    public void setUnit(TUnit node)
    {
        if(_unit_ != null)
        {
            _unit_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _unit_ = node;
    }

    public String toString()
    {
        return ""
            + toString(_unit_);
    }

    void removeChild(Node child)
    {
        if(_unit_ == child)
        {
            _unit_ = null;
            return;
        }

    }

    void replaceChild(Node oldChild, Node newChild)
    {
        if(_unit_ == oldChild)
        {
            setUnit((TUnit) newChild);
            return;
        }

    }
}
